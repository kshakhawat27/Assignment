@{
                /**/

                ViewBag.Title = "TreasuryDepositMonthly";
                Layout = "~/Views/Shared/_Layout.cshtml";
}


@model SalesForce.Domain.Model.Inventory.VatTreasurydepositmonthlyEntity

<form id="InputForm">
    @*@Html.HiddenFor(m => m.SearchStoreId)*@
    <div class="uk-grid">
        <div class="uk-width-1-1">
            <ul class="uk-tab" data-uk-tab="{connect:'#tabs_1_content', swiping: false}" id="tabs_1">
                <li id="tabStockUp" class="uk-active"><a href="#">Treasury Deposit Monthly</a></li>
                <li id="tabStockList"><a href="#">Treasury Deposit Monthly List</a></li>
            </ul>
            <ul id="tabs_1_content" class="uk-switcher uk-margin">
                <li>
                    @Html.HiddenFor(m => m.Id)
                    <div class="uk-grid uk-margin-top" data-uk-grid-margin>
                        <div class="uk-width-medium-2-6">
                            <label>
                                Treasury Challan Number/ Token Number
                            </label>
                            @Html.TextBoxFor(m => m.Treasurychallannumber, new { @class = "md-input label-fixed"})
                        </div>
                        <div class="uk-width-medium-1-6">
                            <label>
                                Bank/Cga
                            </label>
                            @Html.TextBoxFor(m => m.Bank_cga, new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-6">
                            <label>
                                Item
                            </label>
                            @Html.DropDownListFor(m => m.Itemid, (List<SelectListItem>)ViewData["Items"], new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-6">
                            <label>
                                Branch/CAFO/DCO
                            </label>
                            @Html.TextBoxFor(m => m.Branch_cafo_dco,  new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-6">
                            <label>
                                Date
                            </label>
                            @Html.TextBoxFor(m => m.Treasurychallandate, new { @class = "md-input label-fixed", @readonly = "readonly", @data_uk_datepicker = "{format:'DD/MM/YYYY'}" })
                        </div>
                        <div class="uk-width-medium-1-4">
                            <label>
                                Tax Deposit Account Code
                            </label>
                            @Html.TextBoxFor(m => m.Taxdepositaccountcode, new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-4">
                            <label>
                                Amount
                            </label>
                            @Html.TextBoxFor(m => m.Amount, new { @class = "md-input label-fixed", @type = "number" })
                        </div>
                        <div class="uk-width-medium-2-4">
                            <label>
                                Notes
                            </label>
                            @Html.TextBoxFor(m => m.Notes, new { @class = "md-input label-fixed" })
                        </div>
                        <div class="uk-width-medium-1-1">
                            <a class="md-btn md-btn-mini md-btn-success" id="btnSubmit" href="javascript:SubmitData();">Submit</a> <a class="md-btn md-btn-mini md-btn-warning" href="javascript:ResetData();">Reset</a>
                        </div>
                    </div>
                </li>
                <li>
                    <div class="md-card md-card-content md-card-primary">
                        <div class="uk-grid" data-uk-grid-margin>
                            <div class="uk-width-medium-1-6">
                                <label>
                                    Start Date
                                </label>
                                @Html.TextBoxFor(m => m.StartDate, new { @class = "md-input label-fixed", @readonly = "readonly", @data_uk_datepicker = "{format:'DD/MM/YYYY'}" })
                            </div>
                            <div class="uk-width-medium-1-6">
                                <label>
                                    End Date
                                </label>
                                @Html.TextBoxFor(m => m.EndDate, new { @class = "md-input label-fixed", @readonly = "readonly", @data_uk_datepicker = "{format:'DD/MM/YYYY'}" })
                            </div>
                            <div class="uk-width-medium-1-6">
                                <a class="md-btn md-btn-mini md-btn-success" style="margin-top:20px;" href="javascript:GetSearchResult()">Search</a>
                                <i class="uk-icon-spinner uk-icon-medium uk-icon-spin uk-text-warning loading" style="display:none;"></i>
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid" data-uk-grid-margin>
                        <div class="uk-width-medium-1-1" id="tb_Container">
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <div class="uk-modal" id="PrintPopup">
        <div class="uk-modal-dialog uk-modal-dialog-large">
            <div class='uk-modal-header'><h3 class='uk-modal-title'>ModalHeader</h3><button type='button' title='Close' class='uk-modal-close uk-close uk-float-right' style="margin-top:-25px;"></button><hr /></div>

        </div>
    </div>
    <div class="uk-modal" id="detailsModal">
        <div class="uk-modal-dialog">

            <table class="uk-table uk-table-striped">
                <thead>
                    <tr class="md-bg-red-50">
                        <th>SL</th>
                        <th>ProductName</th>
                        <th>Description</th>
                        <th>Quantity</th>
                        @*<th>Unit Price</th>*@
                    </tr>
                </thead>
                <tbody id="detailsTable"></tbody>
            </table>
        </div>
    </div>

</form>



<!-- select2 -->
<link type="text/css" href="@Url.Content("~/Altair/assets/select2/select2.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Altair/assets/select2/select2.full.js")" type="text/javascript"></script>
<script type="text/javascript">$(function () { $(".select2_single").attr("style", "width:100%;").select2(); });</script>

<!-- page specific plugins -->
<!-- ionrangeslider -->
<script src="@Url.Content("~/Altair/bower_components/ion.rangeslider/js/ion.rangeSlider.min.js")"></script>
<!--  forms advanced functions -->
<script type="text/javascript" src="@Url.Content("~/Altair/assets/js/pages/forms_advanced.min.js")"></script>

<!-- datatables -->
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/datatables/media/js/jquery.dataTables.min.js")"></script>
<!-- datatables buttons-->
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/datatables-buttons/js/dataTables.buttons.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/assets/js/custom/datatables/buttons.uikit.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/jszip/dist/jszip.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/pdfmake/build/pdfmake.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/pdfmake/build/vfs_fonts.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/datatables-buttons/js/buttons.colVis.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/datatables-buttons/js/buttons.html5.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Altair/bower_components/datatables-buttons/js/buttons.print.js")"></script>
<!-- datatables custom integration -->
<script type="text/javascript" src="@Url.Content("~/Altair/assets/js/custom/datatables/datatables.uikit.js")"></script>
<!--  datatables functions -->
<script type="text/javascript" src="@Url.Content("~/Altair/assets/js/pages/plugins_datatables.js")"></script>

<style type="text/css">
    .material-icons {
        cursor: pointer;
    }
</style>

<script type="text/javascript">
    $("#Lob").change(function () {
        loadModels();
        GetProductList();
    });

    $('#ModelId').change(function () {
        GetProductList();
    });
    $('#BrandId').change(function () {
        GetProductList();
    });
    function loadModels() {
        $.get("/Inventory/InventoryBase/GetModelListByParam", { LobId: $("#Lob").val(), BrandId: $("#BrandId").val() }, function (data) {
            $("#ModelId").empty();
            $("#ModelId").append("<option value=''>--Select--</option>");
            $.each(data, function (index, row) {
                $("#ModelId").append("<option value='" + row.Id + "'>" + row.Name + "</option>");
            });
        });
    }
    function GetProductList() {
        $.post("/Inventory/InventoryBase/GetAvailableItemListByStore?LOB=" + $('#Lob').val() + '&Brand=' + $('#BrandId').val() + '&ModId=' + $('#ModelId').val(), function (data) {
            var items = "";
            var isSeleted = '';
            if (data.Selected) {
                isSeleted = " selected='selected'";
            }
            $.each(data, function (i, data) {
                items += "<option value='" + data.Value + isSeleted + "'>" + data.Text + "</option>";
            });
            $("#Productid").html(items);
            $("#Productid").removeAttr('disabled');
        });
    }

    $('#Productid').change(function () {
        $("#Desc").val("");
        $("#StockBalance").val("0");
        $.post("/Inventory/InventoryBase/GetAvailableItemStock?PId=" + $('#Productid').val() + '&StoreId=' + $('#Transferto').val(), function (data) {
            $("#Desc").val(data.tData.Description);
            $("#StockBalance").val(data.tData.Balance);
        });
    });

    function AddDataToList() {
        var Product = $("#Productid option:selected").text(),
            Desc = $("#Desc").val(),
            ProductID = $("#Productid").val(),
            Qty = $("#ItemQty").val(),
            UnitP = $("#UnitPrice").val();

        if (parseFloat(Qty) > 0 && Product.length > 0 && ProductID.length > 0) {
            var r = $('#AdderTable tr').length + 1;
            var rowData = "<tr>"
                + "<td>" + r + "<input type='hidden' id='refID" + r + "' value='" + r + "' /><input type='hidden' id='ID" + r + "' value='' /></td>"
                + "<td>" + Product + "<input type='hidden' style='width: auto;' id='PrdID" + r + "' value='" + ProductID + "' /></td>"
                + "<td>" + Desc + "<input type='hidden' id='Desc" + r + "' style='width: auto;' value='" + Desc + "'/></td>"
                + "<td><input type='number' style='width:auto;' id='pQty" + r + "' value='" + Qty + "' min='0' /></td>"
                + "<td><i class='material-icons' onClick='removeRow(this);' title='Delete' style='cursor:pointer;'>&#xE14C;</i></td>"
                + "</tr>";
            $("#AdderTable").append(rowData);
            clearFields();
            document.getElementById("Productid").focus();
        }
        else UIkit.notify("Select Product and Quantity!");
    }

    function removeRow(_this) {
        $(_this).closest('tr').remove();
    }
    function clearFields() {
        $("#Lob").val("");
        $("#BrandId").val("");
        $("#ModelId").val("");
        $("#Productid").val("");
        $("#ItemQty").val("");
        $("#Desc").val("");
        $("#UnitPrice").val("0");
        $("#StockBalance").val("0");
    }

    function SubmitData() {

        //var objDetails = [], obj,
        //    count = 1;

        //$('#AdderTable tr').each(function () {
        //    var cID = $(this).find("td:eq(1) input").attr("id").match(/\d+/);
        //    obj = {};
        //    obj["Itemid"] = $("#PrdID" + cID).val();
        //    obj["Quantity"] = $("#pQty" + cID).val();
        //    obj["Id"] = $("#ID" + cID).val();
        //    obj["Description"] = $("#Desc" + cID).val();
        //    objDetails.push(obj);
        //    count = count + 1;
        //});

        //if (objDetails.length == 0) UIkit.modal.alert("Please Check The Item List");
        //else {
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '/Admin/TreasuryDepositMonthly/AddUpdateTreasuryDepositMonthlyData',
                data: JSON.stringify({ 'iSet': $("#InputForm").serializeObject() }),
                success: function (data) {
                    if (data.Success) {
                        UIkit.modal.alert(data.Message);
                        //ResetData();
                    }
                },
                failure: function (response) {
                    alert(response);
                }
            });
        //}

    }

    function ResetData() {

        $("#Gatepassno").val("");
        $("#Gatepassdate").val("");
        $("#Productid").val("");
        $("#Lob").val("");
        $("#BrandId").val("");
        $("#ModelId").val("");
        $("#Productid").val("");
        $("#ItemQty").val("");
        $("#Desc").val("");
        $("#Receivefrom").val("");
        $("#Transferno").val("");
        $("#RequestFor").val("");
        $("#Transferdate").val("");
        $("#SwofNo").val("");
        $("#StockBalance").val("0");
        $("#Transferto").val("");
        $("#Remarks").val("");
        $("#AdderTable").empty();
        window.setTimeout(function () { location.reload() }, 2000);

    }
    $("#tabStockList").hover(function () {
        $('#rk_dtInfo2').DataTable().order([1, 'asc']).draw();
    });

    GetSearchResult();
    function GetSearchResult() {
        $.post("/Admin/TreasuryDepositMonthly/GetTreasuryDepositMonthlyList?start=" + $("#StartDate").val() + "&end=" + $("#EndDate").val(), function (data) {
            $("#tb_Container").html(data);
            altair_datatables.dt_rkCustom("#rk_dtInfo2", ".rk_dtButton2", 400);
        });
    }


    function LoadGateInDataForEdit(Id) {
        $.post("/GatePass/GatePass/LoadGateInDataForEdit?pId=" + Id, function (data) {
            $("#Gatepassno").val(data.Gatepassno);
            $("#Id").val(data.Id);
            $("#Gatepassdate").val(data.Gatepassdate);
            $("#CurrentBranch").val(data.CurrentBranch);
            $("#Remarks").val(data.Remarks);
            $("#RequestFor").val(data.RequestFor);
            $("#Receivefrom").val(data.Receivefrom);
            $("#AdderTable").html(data.TableData);

            $("#btnSubmit").removeClass("md-btn-success").addClass("md-btn-danger").text("Update").show();
            $("#tabStockUp").click();
        });
    }
    function OpenPopupForDetails(id) {
        $.post('/GatePass/GatePass/GetGateInProductDetails?RefId=' + id, function (data) {
            var row = "";
            $.each(data, function (index, item) {
                row += "<tr>" +
                    "<td>" + item.Sl + "</td>" +
                    "<td>" + item.ProductName + "</td>" +
                    "<td>" + item.Description + "</td>" +
                    "<td>" + item.Quantity + "</td>" +
                    "</tr>";
            });
            $("#detailsTable").html(row);
        });
        UIkit.modal("#detailsModal").show();
    }
    function removeSavedRow(Id) {
        UIkit.modal.confirm('Are you sure to Delete this?', function () {
            $.post("/Inventory/StockTransfer/DeleteTrDetDataById?Id=" + $("#ID" + Id).val(), function (data) {
                if (data.Success) {
                    UIkit.modal.alert(data.Message);
                    $("input#refID" + Id).closest('tr').remove();
                }
                else {
                    UIkit.modal.alert(data.Message);
                }
            });
        });
    }

</script>


